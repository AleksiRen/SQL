
----TALLETUSTESTI
DECLARE @UUSISALDO DECIMAL (11,2),
@TALLETUS DECIMAL(11,2) = 7.50
 EXEC pankki.TalletaTilille '123456-123457' , @TALLETUS, @UUSISALDO OUT
 PRINT CONVERT(VARCHAR(1000), @UUSISALDO)
 GO

create PROC PANKKI.TalletaTilille
--PROCIN PARAMETRIT
@tilinumero VARCHAR(20),
@summa decimal(7,3),
@saldo decimal (11,3) out
AS
--PROCIN MUUTTUJAT
 SET NOCOUNT ON
DECLARE
 @TAPAHTUMACHECK INT
 SET @TAPAHTUMACHECK = @@TRANCOUNT 
 --JOS OLLAAN TAPAHTUMAN SISÄLLÄ, SAVE
 IF @TAPAHTUMACHECK > 0
	SAVE TRAN PROCSAVE
 --MUUToiN ALOITETAAN TAPAHTUMA
 ELSE
	BEGIN TRAN
 BEGIN TRY
 --PÄIVITETÄÄN TILILLE HALUTTU SUMMA 
 UPDATE PANKKI.TILI
 SET SALDO += @SUMMA
 WHERE CD = @TILINUMERO
 --OTETAAN PÄIVITETTY SALDO TALTEEN
 SET @SALDO = (SELECT SALDO FROM PANKKI.TILI WHERE CD = @TILINUMERO)
 --TEHDÄÄN TILITAPAHTUMA TALLETUKSESTA
 INSERT INTO pankki.tilitapahtuma (tili, tyyppi, maara)
 VALUES (@TILINUMERO, 'P', @summa)
 --JOS EI OLTU TAPAHTUMAN SISÄLLÄ
  if @TAPAHTUMACHECK = 0
  commit
  PRINT 'TILILLE TEHTY TALLETUS: ' + CONVERT(VARCHAR(100),@SUMMA)
 --CATCH
  END TRY
 BEGIN CATCH
    DECLARE @virhe NVARCHAR(4000)
    SELECT @virhe = ERROR_MESSAGE()

	IF @TAPAHTUMACHECK = 0
	 ROLLBACK

    ELSE 
	BEGIN
    IF XACT_STATE() <> -1
      ROLLBACK TRAN PROCSAVE
    END

    RAISERROR(@virhe,11,1)
 END CATCH

 SET NOCOUNT OFF
 GO



  --OTATILILTA
  ----------------------------------------------
 -- SELECT*
 -- FROM PANKKI.TILI
 -- select*
 -- from pankki.tilitapahtuma

 -- delete from pankki.tilitapahtuma
 -- where id between 1 and 1000

 --DECLARE @UUSISALDO DECIMAL (11,2),
 --@OTTO DECIMAL(11,2) = 5.00
 --EXEC pankki.OTATILILTA '123456-123457' , @OTTO, @UUSISALDO OUT
 --PRINT 'TILIN SALDO OTON JLK: '+ CONVERT(VARCHAR(1000), @UUSISALDO)
 ----------------------------------------------
 GO
 CREATE PROC PANKKI.OtaTililta
 --PARAMETRIT
 @TILINUMERO VARCHAR(20),
 @SUMMA DECIMAL (11,2),
 @SALDO DECIMAL (11,2) OUT
 AS
 SET NOCOUNT ON
 --OLLANKO TAPAHTUMAN SISÄLLÄ?
 DECLARE @TAPAHTUMACOUNT INT
 SET @TAPAHTUMACOUNT = @@TRANCOUNT
IF @TAPAHTUMACOUNT > 0
SAVE TRAN T1
ELSE
BEGIN TRAN
--ERROR HANDLINGI
BEGIN TRY
 --TILIN PÄIVITYS
UPDATE PANKKI.TILI
SET SALDO -= @SUMMA
WHERE CD = @TILINUMERO
SET @SALDO = (SELECT SALDO FROM PANKKI.TILI WHERE CD = @TILINUMERO)
--TILITAPAHTUMA
 INSERT INTO pankki.tilitapahtuma (tili, tyyppi, maara)
 VALUES (@TILINUMERO, 'O', @summa)

IF @TAPAHTUMACOUNT = 0
COMMIT
 PRINT 'TILIlLTA OTETTU: ' + CONVERT(VARCHAR(100),@SUMMA)

END TRY
BEGIN CATCH
DECLARE @VIRHE NVARCHAR(4000)
SELECT @VIRHE = ERROR_MESSAGE()

IF @TAPAHTUMACOUNT = 0
ROLLBACK
ELSE
BEGIN
IF XACT_STATE() <> -1
ROLLBACK TRAN T1
END
RAISERROR(@VIRHE, 11,1)
END CATCH
SET NOCOUNT OFF
GO

--TILISIIRTO
 -- SELECT*
 -- FROM PANKKI.TILI
 SELECT*
 

 DECLARE @UUSISALDO DECIMAL (11,2),
 @SIIRTOSUMMA DECIMAL(11,2) = 5000.50

 EXEC pankki.TILISIIRTO '123456-123457' ,'123456-123468', @SIIRTOSUMMA
 PRINT CONVERT(VARCHAR(1000), @UUSISALDO)
 GO

 CREATE PROC PANKKI.TiliSiirto
 --PARAMETRIT
 @TILINUMERO1 VARCHAR(20),
 @TILINUMERO2 VARCHAR(20),
 @SUMMA DECIMAL (11,2)

 AS
 SET NOCOUNT ON
 --OLLANKO TAPAHTUMAN SISÄLLÄ?
 DECLARE @TAPAHTUMACOUNT INT
 SET @TAPAHTUMACOUNT = @@TRANCOUNT

IF @TAPAHTUMACOUNT > 0
SAVE TRAN T1
ELSE
BEGIN TRAN
--ERROR HANDLINGI
BEGIN TRY
--PÄIVITETÄÄN OTETTAVAN SUMMAN VERRAN RAHAA POIS ENSIMMÄISELTÄ TILILTÄ
UPDATE pankki.tili
 SET saldo = COALESCE(saldo,0) - @summa
 WHERE cd = @TILINUMERO1
 --TEHDÄÄN TILITAPAHTUMA
 INSERT INTO pankki.tilitapahtuma (tili, tyyppi, maara)
 VALUES (@TILINUMERO1, 'O', @summa)
 --PÄIVITETÄÄN SIIRRETTÄVÄ SUMMA TOISELLE TILILLE
 UPDATE pankki.tili
 SET saldo = COALESCE(saldo,0) + @summa
 WHERE cd = @TILINUMERO2
 --TEHDÄÄN TILITAPAHTUMA
 INSERT INTO pankki.tilitapahtuma (tili, tyyppi, maara)
 VALUES (@TILINUMERO2, 'P', @summa) 

 IF @TAPAHTUMACOUNT = 0
COMMIT
 PRINT 'TILILTÄ ' + @TILINUMERO1+ ' ON SIIRRETTY '+CONVERT(VARCHAR(200), @SUMMA) + ' TILILLE ' + @TILINUMERO2
 --CATCH
END TRY
BEGIN CATCH
DECLARE @VIRHE NVARCHAR(4000)
SELECT @VIRHE = ERROR_MESSAGE()

IF @TAPAHTUMACOUNT = 0
ROLLBACK
ELSE
BEGIN
IF XACT_STATE() <> -1
ROLLBACK TRAN T1
END
RAISERROR(@VIRHE, 11,1)
END CATCH
SET NOCOUNT OFF
GO



